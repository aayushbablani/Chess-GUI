{"ast":null,"code":"var _jsxFileName = \"/Users/aayushbablani/Desktop/Chess-GUI/frontend/src/components/Chessboard/Chessboard.tsx\",\n  _s = $RefreshSig$();\nimport { useRef, useState } from \"react\";\nimport \"./Chessboard.css\";\nimport Tile from \"../Tile/Tile\";\nimport { VERTICAL_AXIS, HORIZONTAL_AXIS, GRID_SIZE } from \"../../Constants\";\nimport { Position } from \"../../models\";\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar isWhite = false;\nexport default function Chessboard({\n  playMove,\n  pieces\n}) {\n  _s();\n  const [activePiece, setActivePiece] = useState(null);\n  const [grabPosition, setGrabPosition] = useState(new Position(-1, -1));\n  const chessboardRef = useRef(null);\n  function grabPiece(e) {\n    const element = e.target;\n    const chessboard = chessboardRef.current;\n    if (element.classList.contains(\"chess-piece\") && chessboard) {\n      const grabX = Math.floor((e.clientX - chessboard.offsetLeft) / GRID_SIZE);\n      const grabY = Math.abs(Math.ceil((e.clientY - chessboard.offsetTop - 800) / GRID_SIZE));\n      setGrabPosition(new Position(grabX, grabY));\n      const x = e.clientX - GRID_SIZE / 2;\n      const y = e.clientY - GRID_SIZE / 2;\n      element.style.position = \"absolute\";\n      element.style.left = `${x}px`;\n      element.style.top = `${y}px`;\n      setActivePiece(element);\n    }\n  }\n  function movePiece(e) {\n    const chessboard = chessboardRef.current;\n    if (activePiece && chessboard) {\n      const minX = chessboard.offsetLeft - 25;\n      const minY = chessboard.offsetTop - 25;\n      const maxX = chessboard.offsetLeft + chessboard.clientWidth - 75;\n      const maxY = chessboard.offsetTop + chessboard.clientHeight - 75;\n      const x = e.clientX - 50;\n      const y = e.clientY - 50;\n      activePiece.style.position = \"absolute\";\n\n      //If x is smaller than minimum amount\n      if (x < minX) {\n        activePiece.style.left = `${minX}px`;\n      }\n      //If x is bigger than maximum amount\n      else if (x > maxX) {\n        activePiece.style.left = `${maxX}px`;\n      }\n      //If x is in the constraints\n      else {\n        activePiece.style.left = `${x}px`;\n      }\n\n      //If y is smaller than minimum amount\n      if (y < minY) {\n        activePiece.style.top = `${minY}px`;\n      }\n      //If y is bigger than maximum amount\n      else if (y > maxY) {\n        activePiece.style.top = `${maxY}px`;\n      }\n      //If y is in the constraints\n      else {\n        activePiece.style.top = `${y}px`;\n      }\n    }\n  }\n  function dropPiece(e) {\n    const chessboard = chessboardRef.current;\n    if (activePiece && chessboard) {\n      const x = Math.floor((e.clientX - chessboard.offsetLeft) / GRID_SIZE);\n      const y = Math.abs(Math.ceil((e.clientY - chessboard.offsetTop - 800) / GRID_SIZE));\n      const currentPiece = pieces.find(p => p.samePosition(grabPosition));\n      if (currentPiece) {\n        var succes = playMove(currentPiece.clone(), new Position(x, y));\n        if (succes) {\n          var currX = currentPiece.position.x;\n          var currY = currentPiece.position.y;\n          axios.post(\"http://127.0.0.1:105/play\", {\n            currX: currX,\n            currY: currY,\n            newX: x,\n            newY: y\n          }).then(function (response) {\n            console.log(response);\n            const x = response.data[\"old_engine_x\"];\n            const y = response.data[\"old_engine_y\"];\n            const new_x = response.data[\"new_engine_x\"];\n            const new_y = response.data[\"new_engine_y\"];\n            const oldPosition = new Position(x, y);\n            const enginePiece = pieces.find(p => p.samePosition(oldPosition));\n            console.log(enginePiece);\n            if (enginePiece) {\n              enginePiece.possibleMoves = [new Position(new_x, new_y)];\n              var engine_success = playMove(enginePiece.clone(), new Position(new_x, new_y));\n              console.log(engine_success);\n            }\n          }).catch(function (error) {\n            console.log(error);\n          });\n        }\n        if (!succes) {\n          //RESETS THE PIECE POSITION\n          activePiece.style.position = \"relative\";\n          activePiece.style.removeProperty(\"top\");\n          activePiece.style.removeProperty(\"left\");\n        }\n      }\n      setActivePiece(null);\n    }\n  }\n  let board = [];\n  for (let j = VERTICAL_AXIS.length - 1; j >= 0; j--) {\n    for (let i = 0; i < HORIZONTAL_AXIS.length; i++) {\n      const number = j + i + 2;\n      const piece = pieces.find(p => p.samePosition(new Position(i, j)));\n      let image = piece ? piece.image : undefined;\n      let currentPiece = activePiece != null ? pieces.find(p => p.samePosition(grabPosition)) : undefined;\n      let highlight = currentPiece !== null && currentPiece !== void 0 && currentPiece.possibleMoves ? currentPiece.possibleMoves.some(p => p.samePosition(new Position(i, j))) : false;\n      board.push( /*#__PURE__*/_jsxDEV(Tile, {\n        image: image,\n        number: number,\n        highlight: highlight\n      }, `${j},${i}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }, this));\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      onMouseMove: e => movePiece(e),\n      onMouseDown: e => grabPiece(e),\n      onMouseUp: e => dropPiece(e),\n      id: \"chessboard\",\n      ref: chessboardRef,\n      children: board\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(Chessboard, \"sphX6zZxN9uC26dtd78lyWEIfdY=\");\n_c = Chessboard;\nvar _c;\n$RefreshReg$(_c, \"Chessboard\");","map":{"version":3,"names":["useRef","useState","Tile","VERTICAL_AXIS","HORIZONTAL_AXIS","GRID_SIZE","Position","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","isWhite","Chessboard","playMove","pieces","_s","activePiece","setActivePiece","grabPosition","setGrabPosition","chessboardRef","grabPiece","e","element","target","chessboard","current","classList","contains","grabX","Math","floor","clientX","offsetLeft","grabY","abs","ceil","clientY","offsetTop","x","y","style","position","left","top","movePiece","minX","minY","maxX","clientWidth","maxY","clientHeight","dropPiece","currentPiece","find","p","samePosition","succes","clone","currX","currY","post","newX","newY","then","response","console","log","data","new_x","new_y","oldPosition","enginePiece","possibleMoves","engine_success","catch","error","removeProperty","board","j","length","i","number","piece","image","undefined","highlight","some","push","fileName","_jsxFileName","lineNumber","columnNumber","children","onMouseMove","onMouseDown","onMouseUp","id","ref","_c","$RefreshReg$"],"sources":["/Users/aayushbablani/Desktop/Chess-GUI/frontend/src/components/Chessboard/Chessboard.tsx"],"sourcesContent":["import { useRef, useState, useEffect } from \"react\";\nimport \"./Chessboard.css\";\nimport Tile from \"../Tile/Tile\";\nimport { VERTICAL_AXIS, HORIZONTAL_AXIS, GRID_SIZE } from \"../../Constants\";\nimport { Piece, Position } from \"../../models\";\nimport axios from 'axios';\n\ninterface Props {\n  playMove: (piece: Piece, position: Position) => boolean;\n  pieces: Piece[];\n}\n\nvar isWhite = false;\n\nexport default function Chessboard({ playMove, pieces }: Props) {\n  const [activePiece, setActivePiece] = useState<HTMLElement | null>(null);\n  const [grabPosition, setGrabPosition] = useState<Position>(\n    new Position(-1, -1)\n  );\n  const chessboardRef = useRef<HTMLDivElement>(null);\n\n  function grabPiece(e: React.MouseEvent) {\n    const element = e.target as HTMLElement;\n    const chessboard = chessboardRef.current;\n    if (element.classList.contains(\"chess-piece\") && chessboard) {\n      const grabX = Math.floor((e.clientX - chessboard.offsetLeft) / GRID_SIZE);\n      const grabY = Math.abs(\n        Math.ceil((e.clientY - chessboard.offsetTop - 800) / GRID_SIZE)\n      );\n      setGrabPosition(new Position(grabX, grabY));\n\n      const x = e.clientX - GRID_SIZE / 2;\n      const y = e.clientY - GRID_SIZE / 2;\n      element.style.position = \"absolute\";\n      element.style.left = `${x}px`;\n      element.style.top = `${y}px`;\n\n      setActivePiece(element);\n    }\n  }\n\n  function movePiece(e: React.MouseEvent) {\n    const chessboard = chessboardRef.current;\n    if (activePiece && chessboard) {\n      const minX = chessboard.offsetLeft - 25;\n      const minY = chessboard.offsetTop - 25;\n      const maxX = chessboard.offsetLeft + chessboard.clientWidth - 75;\n      const maxY = chessboard.offsetTop + chessboard.clientHeight - 75;\n      const x = e.clientX - 50;\n      const y = e.clientY - 50;\n      activePiece.style.position = \"absolute\";\n\n      //If x is smaller than minimum amount\n      if (x < minX) {\n        activePiece.style.left = `${minX}px`;\n      }\n      //If x is bigger than maximum amount\n      else if (x > maxX) {\n        activePiece.style.left = `${maxX}px`;\n      }\n      //If x is in the constraints\n      else {\n        activePiece.style.left = `${x}px`;\n      }\n\n      //If y is smaller than minimum amount\n      if (y < minY) {\n        activePiece.style.top = `${minY}px`;\n      }\n      //If y is bigger than maximum amount\n      else if (y > maxY) {\n        activePiece.style.top = `${maxY}px`;\n      }\n      //If y is in the constraints\n      else {\n        activePiece.style.top = `${y}px`;\n      }\n    }\n  }\n\n  function dropPiece(e: React.MouseEvent) {\n    const chessboard = chessboardRef.current;\n    if (activePiece && chessboard) {\n      const x = Math.floor((e.clientX - chessboard.offsetLeft) / GRID_SIZE);\n      const y = Math.abs(\n        Math.ceil((e.clientY - chessboard.offsetTop - 800) / GRID_SIZE)\n      );\n\n      const currentPiece = pieces.find((p) => p.samePosition(grabPosition));\n\n      if (currentPiece) {\n        var succes = playMove(currentPiece.clone(), new Position(x, y));\n\n        if(succes){\n          var currX = currentPiece.position.x\n          var currY = currentPiece.position.y\n\n          axios.post(\"http://127.0.0.1:105/play\", \n                     {\n                      currX: currX,\n                      currY: currY, \n                      newX: x, \n                      newY: y\n                     }\n          )\n          .then(function (response) {\n            console.log(response);\n            const x = response.data[\"old_engine_x\"];\n            const y = response.data[\"old_engine_y\"];\n            const new_x = response.data[\"new_engine_x\"];\n            const new_y = response.data[\"new_engine_y\"];\n\n            const oldPosition = new Position(x, y);\n            const enginePiece = pieces.find((p) => p.samePosition(oldPosition));\n\n            console.log(enginePiece);\n\n            if(enginePiece){\n              enginePiece.possibleMoves = [new Position(new_x, new_y)];\n              var engine_success = playMove(enginePiece.clone(), new Position(new_x, new_y));\n              console.log(engine_success);\n            }\n          })\n          .catch(function (error) {\n            console.log(error);\n          });\n        }\n\n        if (!succes) {\n          //RESETS THE PIECE POSITION\n          activePiece.style.position = \"relative\";\n          activePiece.style.removeProperty(\"top\");\n          activePiece.style.removeProperty(\"left\");\n        }\n      }\n      setActivePiece(null);\n    }\n  }\n\n  let board = [];\n\n  for (let j = VERTICAL_AXIS.length - 1; j >= 0; j--) {\n    for (let i = 0; i < HORIZONTAL_AXIS.length; i++) {\n      const number = j + i + 2;\n      const piece = pieces.find((p) => p.samePosition(new Position(i, j)));\n      let image = piece ? piece.image : undefined;\n\n      let currentPiece =\n        activePiece != null\n          ? pieces.find((p) => p.samePosition(grabPosition))\n          : undefined;\n      let highlight = currentPiece?.possibleMoves\n        ? currentPiece.possibleMoves.some((p) =>\n            p.samePosition(new Position(i, j))\n          )\n        : false;\n\n      board.push(\n        <Tile\n          key={`${j},${i}`}\n          image={image}\n          number={number}\n          highlight={highlight}\n        />\n      );\n    }\n  }\n\n  return (\n    <>\n      <div\n        onMouseMove={(e) => movePiece(e)}\n        onMouseDown={(e) => grabPiece(e)}\n        onMouseUp={(e) => dropPiece(e)}\n        id=\"chessboard\"\n        ref={chessboardRef}\n      >\n        {board}\n      </div>\n    </>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}