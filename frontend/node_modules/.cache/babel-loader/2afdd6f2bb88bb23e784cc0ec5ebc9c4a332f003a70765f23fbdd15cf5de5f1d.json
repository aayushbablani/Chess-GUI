{"ast":null,"code":"var _jsxFileName = \"/Users/aayushbablani/Desktop/Chess-GUI/frontend/src/Login.jsx\",\n  _s2 = $RefreshSig$();\n// Import necessary modules and components\nimport React, { useState } from \"react\";\nimport \"./Login.css\"; // Importing the CSS file for Login styling\nimport Chessboard from \"./components/Chessboard/Chessboard\"; // Import the Chessboard component\nimport Selection from './components/Selection/Selection'; // Import the Chessboard component\nimport Referee from \"./components/Referee/Referee\";\n\n// Login component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Login() {\n  _s2();\n  var _s = $RefreshSig$();\n  // Setting up state variables for username, password, and login status\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [loggedIn, setLoggedIn] = useState(false); // State variable to track if the user is logged in\n  const [isImageClicked, setIsImageClicked] = useState(false);\n\n  // Function to handle the login process\n  const handleLogin = e => {\n    e.preventDefault(); // Prevent the form from submitting\n\n    // You can add your authentication logic here\n    // For simplicity, we'll just check if the username and password are not empty\n    if (username !== \"\" && password !== \"\") {\n      setLoggedIn(true); // Set the loggedIn state to true if the username and password are not empty\n    } else {\n      alert(\"Please enter both username and password.\"); // Alert the user to enter both username and password if they are empty\n    }\n  };\n\n  // JSX content for the Login component\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-container\",\n    children: [\" \", !loggedIn ?\n    /*#__PURE__*/\n    // Check if the user is not logged in\n    _jsxDEV(_Fragment, {\n      children: [\" \", /*#__PURE__*/_jsxDEV(\"h2\", {\n        style: {\n          color: 'white'\n        },\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleLogin,\n        children: [\" \", /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [\" \", /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"username\",\n            children: \"Username:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 15\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"username\",\n            value: username,\n            onChange: e => setUsername(e.target.value) // Event handler for changing the username state\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [\" \", /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"password\",\n            children: \"Password:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 15\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            id: \"password\",\n            value: password,\n            onChange: e => setPassword(e.target.value) // Event handler for changing the password state\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : !isImageClicked && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(User, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }, this), \" \", /*#__PURE__*/_jsxDEV(Selection, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 13\n      }, this), \" \", /*#__PURE__*/_jsxDEV(HomeExit, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 11\n    }, this) // Render the Home Page if the user is logged in.\n    ]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n  function User() {\n    /* Profile Icon displaying the username of the user currently logged in.*/\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"profileIcon\",\n      children: [\" \", /*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"assets/images/profile_icon.svg\",\n        alt: `Profile Icon for ${username}`,\n        width: \"4%\",\n        style: {\n          paddingRight: 10\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"profileName\",\n        children: username\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this);\n  }\n  function HomeExit() {\n    _s();\n    /* Home Button and Log Out Buttons located in the bottom right corner. */\n\n    const [isIconsVisible, setIsIconsVisible] = useState(true);\n    const [ImgClicked, setImgClicked] = useState(null);\n    const handleHomeClick = () => {\n      setIsImageClicked(true);\n      setIsImageClicked(false);\n      setImgClicked('home');\n    };\n    const handleExitClick = () => {\n      setImgClicked('exit');\n      setIsImageClicked(false);\n      setIsIconsVisible(false);\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"home_exitIcons\",\n      children: [isIconsVisible && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"home_Icon\",\n          src: \"assets/images/home_icon.svg\",\n          alt: \"Click house to go back home\",\n          width: \"3%\",\n          onClick: handleHomeClick\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"exit_Icon\",\n          src: \"assets/images/exit_icon.svg\",\n          alt: \"Click exit to log out\",\n          width: \"3%\",\n          onClick: handleExitClick\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true), ImgClicked === 'home' && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(User, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Selection, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(HomeExit, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true), ImgClicked === 'exit' && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 13\n        }, this)\n      }, void 0, false)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this);\n  }\n  _s(HomeExit, \"omYoibDa6GFvcaa+JPsQepcQGZ4=\");\n}\n\n// Export the Login component as the default export\n_s2(Login, \"XTXweAiI17RYASfxYWfAy2kkAbk=\");\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","Chessboard","Selection","Referee","jsxDEV","_jsxDEV","Fragment","_Fragment","Login","_s2","_s","$RefreshSig$","username","setUsername","password","setPassword","loggedIn","setLoggedIn","isImageClicked","setIsImageClicked","handleLogin","e","preventDefault","alert","className","children","style","color","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","id","value","onChange","target","User","HomeExit","src","alt","width","paddingRight","isIconsVisible","setIsIconsVisible","ImgClicked","setImgClicked","handleHomeClick","handleExitClick","onClick","_c","$RefreshReg$"],"sources":["/Users/aayushbablani/Desktop/Chess-GUI/frontend/src/Login.jsx"],"sourcesContent":["// Import necessary modules and components\nimport React, { useState } from \"react\";\nimport \"./Login.css\"; // Importing the CSS file for Login styling\nimport Chessboard from \"./components/Chessboard/Chessboard\"; // Import the Chessboard component\nimport Selection from './components/Selection/Selection'; // Import the Chessboard component\nimport Referee from \"./components/Referee/Referee\";\n\n// Login component\nfunction Login() {\n  // Setting up state variables for username, password, and login status\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [loggedIn, setLoggedIn] = useState(false); // State variable to track if the user is logged in\n  const [isImageClicked, setIsImageClicked] = useState(false);\n\n  // Function to handle the login process\n  const handleLogin = (e) => {\n    e.preventDefault(); // Prevent the form from submitting\n\n    // You can add your authentication logic here\n    // For simplicity, we'll just check if the username and password are not empty\n    if (username !== \"\" && password !== \"\") {\n      setLoggedIn(true); // Set the loggedIn state to true if the username and password are not empty\n    } else {\n      alert(\"Please enter both username and password.\"); // Alert the user to enter both username and password if they are empty\n    }\n  };\n\n  // JSX content for the Login component\n  return (\n    <div className=\"login-container\">\n      {\" \"}\n      {/* Main container for the login component */}\n      {!loggedIn ? ( // Check if the user is not logged in\n        <>\n          {\" \"}\n          {/* Fragment shorthand */}\n          <h2 style={{color: 'white'}}>Login</h2> {/* Heading for the login section */}\n          <form onSubmit={handleLogin}>\n            {\" \"}\n            {/* Login form with a submit event handler */}\n            <div className=\"form-group\">\n              {\" \"}\n              {/* Container for the username input field */}\n              <label htmlFor=\"username\">Username:</label>{\" \"}\n              {/* Label for the username input field */}\n              <input\n                type=\"text\"\n                id=\"username\"\n                value={username}\n                onChange={(e) => setUsername(e.target.value)} // Event handler for changing the username state\n              />\n            </div>\n            <div className=\"form-group\">\n              {\" \"}\n              {/* Container for the password input field */}\n              <label htmlFor=\"password\">Password:</label>{\" \"}\n              {/* Label for the password input field */}\n              <input\n                type=\"password\"\n                id=\"password\"\n                value={password}\n                onChange={(e) => setPassword(e.target.value)} // Event handler for changing the password state\n              />\n            </div>\n            <button type=\"submit\">Login</button>{\" \"}\n            {/* Button to submit the form */}\n          </form>\n        </>\n      ) : (\n        !isImageClicked && (\n          <div>\n            <User /> {/* Component for the User Icon */}\n            <Selection /> {/* Component for the Home Page. */}\n            <HomeExit /> {/* Component for the Home Button and Log Out Button. */}\n          </div> // Render the Home Page if the user is logged in.\n        )\n      )}\n    </div>\n  );\n\n  function User() { /* Profile Icon displaying the username of the user currently logged in.*/\n    \n    return (\n      <div className='profileIcon'> {/* See Selection.css for the corresponding styles for this class. */}\n        <img src=\"assets/images/profile_icon.svg\" alt={`Profile Icon for ${username}`} width=\"4%\" style={{paddingRight: 10}}/>\n        <h2 className='profileName'>\n          {username}\n        </h2>\n      </div>\n    )\n  }\n\n  function HomeExit() { /* Home Button and Log Out Buttons located in the bottom right corner. */\n\n    const [isIconsVisible, setIsIconsVisible] = useState(true);\n    const [ImgClicked, setImgClicked] = useState(null);\n\n    const handleHomeClick = () => {\n      setIsImageClicked(true);\n      setIsImageClicked(false);\n      setImgClicked('home');\n    };\n\n    const handleExitClick = () => {\n      setImgClicked('exit');\n      setIsImageClicked(false);\n      setIsIconsVisible(false);\n    }\n\n    return (\n      <div className='home_exitIcons'>\n        {isIconsVisible && (\n          <>\n            <img className='home_Icon' src='assets/images/home_icon.svg' alt='Click house to go back home' width=\"3%\" onClick={handleHomeClick}/>\n            <img className='exit_Icon' src='assets/images/exit_icon.svg' alt='Click exit to log out' width=\"3%\" onClick={handleExitClick}/>\n          </>\n        )}\n\n        {ImgClicked === 'home' && (\n          <>\n            <User />\n            <Selection />\n            <HomeExit />\n          </>\n        )}\n\n        {ImgClicked === 'exit' && (\n          <>\n            <Login />\n          </>\n        )}\n\n      </div>\n    )\n\n  }\n\n\n\n\n}\n\n// Export the Login component as the default export\nexport default Login;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}